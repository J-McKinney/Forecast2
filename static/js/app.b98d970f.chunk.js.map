{"version":3,"sources":["assets/golf2.png","assets/golfBall.svg","config.js","App.js","index.js"],"names":["module","exports","App","state","myLat","myLon","city","zip","weatherDescription","temp","humidity","windSpeed","placesToGolf","platform","getForeCast","e","preventDefault","weatherAPI","config","axios","get","then","res","setState","data","current","weather","description","wind_speed","catch","err","console","log","reverseGeocoding","results","address_components","long_name","short_name","error","headers","Authorization","params","term","categories","limit","radius","sort_by","latitude","longitude","businesses","this","Platform","OS","navigator","geolocation","getCurrentPosition","pos","coordinates","coords","Alert","alert","message","code","enableHighAccuracy","timeout","maximumAge","SafeAreaView","style","styles","safeArea","View","container","ImageBackground","source","golfCourse","backgroungImg","imageStyle","resizeMode","logoContainer","Image","golfBall","logo","alt","TouchableOpacity","touchableOpacityButton","onPress","Text","forecastButton","view","width","borderBottomColor","borderBottomWidth","textAlign","justifyContent","borderRadius","filter","place","map","filteredPlaces","key","id","filteredCard","Title","welcome","name","height","touchableOpacityPhone","Linking","openURL","display_phone","touchableOpacityCard","lat","lon","location","display_address","type","ratingCount","startingValue","rating","StatusBar","Component","StyleSheet","create","flex","backgroundColor","alignItems","paddingBottom","paddingTop","marginLeft","marginBottom","fontSize","fontWeight","title","registerRootComponent"],"mappings":"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","file":"static/js/app.b98d970f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/golf2.4e67ef83.png\";","module.exports = __webpack_public_path__ + \"static/media/golfBall.4daa5f5c.svg\";","import { GOOGLE_KEY, YELP_KEY, WEATHER_KEY } from \"react-native-dotenv\";\r\n\r\nexport default {\r\n  GOOGLE_KEY,\r\n  YELP_KEY,\r\n  WEATHER_KEY,\r\n};\r\n","import { StatusBar } from \"expo-status-bar\";\nimport React, { Component } from \"react\";\nimport config from \"./config.js\";\nimport axios from \"axios\";\nimport {\n  Alert,\n  Linking,\n  Platform,\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Image,\n  ImageBackground,\n} from \"react-native\";\nimport { Card, Rating } from \"react-native-elements\";\nimport golfCourse from \"./assets/golf2.png\";\nimport golfBall from \"./assets/golfBall.svg\";\n\nexport default class App extends Component {\n  state = {\n    myLat: \"\",\n    myLon: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    weatherDescription: \"\",\n    temp: \"\",\n    humidity: \"\",\n    windSpeed: \"\",\n    placesToGolf: [],\n    platform: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({ platform: Platform.OS });\n    navigator.geolocation.getCurrentPosition(\n      (pos) => {\n        let coordinates = pos.coords;\n        this.setState({ myLat: coordinates.latitude });\n        this.setState({ myLon: coordinates.longitude });\n      },\n      (error) =>\n        Alert.alert(\n          \"Please Enable Your GPS. Error Message: \" +\n            error.message +\n            \"Error Code: \" +\n            error.code\n        ),\n      {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 100000,\n      }\n    );\n  }\n\n  componentDidUpdate() {}\n\n  // OpenWeather API\n  getForeCast = (e) => {\n    e.preventDefault();\n    if (this.state.myLat !== \"undefined\") {\n      const weatherAPI =\n        \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n        this.state.myLat +\n        \"&lon=\" +\n        this.state.myLon +\n        \"&units=imperial&exclude=minutely,alerts&appid=\" +\n        config.WEATHER_KEY;\n      axios\n        .get(weatherAPI)\n        .then((res) => {\n          this.setState({\n            temp: res.data.current.temp + \"Â° Fehrenheit\",\n            humidity: res.data.current.humidity + \"%\",\n            weatherDescription: res.data.current.weather[0].description,\n            windSpeed: res.data.current.wind_speed + \"/mph\",\n          });\n          return axios.get(weatherAPI);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      // Reverse Geocoding API\n      const reverseGeocoding =\n        \"https://maps.googleapis.com/maps/api/geocode/json?latlng=\" +\n        this.state.myLat +\n        \",\" +\n        this.state.myLon +\n        \"&key=AIzaSyCANJ80ZERHp5HlMHbV1la0mQ5l7_a7DaI\";\n      // \"&key=\" +\n      // config.GOOGLE_KEY;\n      // console.log(reverseGeocoding);\n      axios\n        .get(reverseGeocoding)\n        .then((res) => {\n          // console.log(res.data)\n          this.setState({\n            city: res.data.results[0].address_components[2].long_name,\n            state: res.data.results[0].address_components[4].short_name,\n            zip: res.data.results[0].address_components[6].long_name,\n          });\n          return axios.get(reverseGeocoding);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    } else {\n      console.log(\"Something Went Wrong?\");\n    }\n    const yelpAPI = axios.get(\n      `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search`,\n      // `${\"https://corsanywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search`,\n      // `${\"https://cors.bridged.cc/\"}https://api.yelp.com/v3/businesses/search`,\n      {\n        headers: {\n          Authorization: `Bearer ${config.YELP_KEY}`,\n        },\n        params: {\n          term: \"golf\",\n          categories: \"golf\",\n          limit: 50,\n          radius: 40000,\n          sort_by: \"distance\",\n          // open_now: true,\n          latitude: this.state.myLat,\n          longitude: this.state.myLon,\n        },\n      }\n    );\n    return yelpAPI\n      .then((res) => {\n        this.setState({ placesToGolf: res.data.businesses });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        <SafeAreaView style={styles.safeArea}>\n          <View style={styles.container}>\n            <ImageBackground\n              source={golfCourse}\n              style={styles.backgroungImg}\n              imageStyle={{ resizeMode: \"repeat\" }}\n            >\n              <View style={styles.logoContainer}>\n                <Image source={golfBall} style={styles.logo} alt=\"Logo\" />\n              </View>\n              <TouchableOpacity\n                style={styles.touchableOpacityButton}\n                onPress={this.getForeCast}\n              >\n                <Text style={styles.forecastButton}>Fore-Cast</Text>\n              </TouchableOpacity>\n              <Text style={styles.view}>\n                Temp: {this.state.temp}\n              </Text>\n              <Text style={styles.view}>Humidity: {this.state.humidity}</Text>\n              <Text style={styles.view}>\n                Wind Speed: {this.state.windSpeed}\n              </Text>\n              <Text style={styles.view}>\n                Forecast: {this.state.weatherDescription}\n              </Text>\n              <Text style={styles.view}>\n                Your Location:\n                {\" \" +\n                  this.state.city +\n                  \" \" +\n                  this.state.state +\n                  \" \" +\n                  this.state.zip}\n              </Text>\n              <View\n                style={{\n                  width: \"100%\",\n                  borderBottomColor: \"black\",\n                  borderBottomWidth: 1,\n                  textAlign: \"center\",\n                  justifyContent: \"center\",\n                }}\n              />\n              <Text style={styles.view}>Golf Results Closest To You:</Text>\n              <View\n                style={{\n                  width: \"100%\",\n                  borderBottomColor: \"black\",\n                  borderBottomWidth: 1,\n                  textAlign: \"center\",\n                  justifyContent: \"center\",\n                  borderRadius: 20,\n                }}\n              />\n              {/* These Are The Filtered Golf Locations */}\n              <View style={{ borderRadius: 20 }}>\n                {this.state.placesToGolf\n                  .filter((place) => place)\n                  .map((filteredPlaces) => (\n                    <View style={{ borderRadius: 20 }} key={filteredPlaces.id}>\n                      <Card style={styles.filteredCard}>\n                        <Card.Title style={styles.welcome}>\n                          {filteredPlaces.name}\n                        </Card.Title>\n                        <View style={{ height: \"20px\" }} />\n                        <TouchableOpacity style={styles.touchableOpacityPhone}>\n                          <Text\n                            style={styles.welcome}\n                            onPress={() => {\n                              if (this.state.platform === \"android\" || \"web\") {\n                                Linking.openURL(\n                                  `tel:${filteredPlaces.display_phone}`\n                                );\n                              } else {\n                                Linking.openURL(\n                                  `telprompt:${filteredPlaces.display_phone}`\n                                );\n                              }\n                            }}\n                          >\n                            {filteredPlaces.display_phone}\n                          </Text>\n                        </TouchableOpacity>\n                        <View style={{ height: \"20px\" }} />\n                        <TouchableOpacity style={styles.touchableOpacityCard}>\n                          <TouchableOpacity\n                            onPress={() => {\n                              let lat = filteredPlaces.coordinates.latitude;\n                              let lon = filteredPlaces.coordinates.longitude;\n                              if (this.state.platform === \"android\" || \"web\") {\n                                Linking.openURL(\n                                  `https://www.google.com/maps/dir/?api=1&origin=` +\n                                    this.state.myLat +\n                                    `,` +\n                                    this.state.myLon +\n                                    `&destination=` +\n                                    lat +\n                                    `,` +\n                                    lon +\n                                    `&travelmode=driving`\n                                );\n                              } else {\n                                Linking.openURL(\n                                  `https://www.google.com/maps/dir/?api=1&origin=` +\n                                    this.state.myLat +\n                                    `,` +\n                                    this.state.myLon +\n                                    `&destination=` +\n                                    lat +\n                                    `,` +\n                                    lon +\n                                    `&travelmode=driving`\n                                );\n                              }\n                            }}\n                          >\n                            <Text style={styles.welcome}>\n                              {filteredPlaces.location.display_address[0]}\n                            </Text>\n                            <Text style={styles.welcome}>\n                              {filteredPlaces.location.display_address[1]}\n                            </Text>\n                            <Text style={styles.welcome}>\n                              {filteredPlaces.location.display_address[2]}\n                            </Text>\n                            <View style={{ height: \"20px\" }} />\n                          </TouchableOpacity>\n                        </TouchableOpacity>\n                        <Text style={styles.welcome}>Yelp Rating:</Text>\n                        <View style={{ height: \"10px\" }} />\n                        <Rating\n                          type=\"star\"\n                          ratingCount={5}\n                          startingValue={filteredPlaces.rating}\n                        />\n                        <View style={{ height: \"20px\" }} />\n                      </Card>\n                    </View>\n                  ))}\n              </View>\n              <StatusBar style=\"auto\" />\n            </ImageBackground>\n          </View>\n        </SafeAreaView>\n      </>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    height: \"100%\",\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  logoContainer: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingBottom: \"50px\",\n    paddingTop: \"50px\",\n  },\n  touchableOpacityCard: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"80%\",\n    height: \"auto\",\n    marginLeft: \"10%\",\n    paddingTop: \"10px\",\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n  },\n  touchableOpacityPhone: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"80%\",\n    height: \"auto\",\n    marginLeft: \"10%\",\n    paddingBottom: \"8px\",\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n  },\n  touchableOpacityButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"50%\",\n    height: \"50px\",\n    marginLeft: \"25%\",\n    marginBottom: \"20px\",\n    backgroundColor: \"#009688\",\n    borderRadius: 10,\n    // shadowOffset: \"100\",\n    // shadowColor: \"black\",\n    // shadowRadius: \"50%\",\n    // shadowOpacity: \"1\",\n  },\n  forecastButton: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n  },\n  welcome: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n  },\n  view: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#ffffff\",\n  },\n  filteredCard: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n  },\n  backgroungImg: {\n    textAlign: \"center\",\n    height: \"100%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n  },\n  logo: {\n    textAlign: \"center\",\n    height: \"200px\",\n    width: \"200px\",\n    justifyContent: \"center\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: 100,\n  },\n});\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in the Expo client or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}